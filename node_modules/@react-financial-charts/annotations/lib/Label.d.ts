import { ScaleContinuousNumeric } from "d3-scale";
import * as React from "react";
export interface LabelProps {
    readonly datum?: any;
    readonly fillStyle?: string | ((datum: any) => string);
    readonly fontFamily?: string;
    readonly fontSize?: number;
    readonly fontWeight?: string;
    readonly rotate?: number;
    readonly selectCanvas?: (canvases: any) => any;
    readonly text?: string | ((datum: any) => string);
    readonly textAlign?: CanvasTextAlign;
    readonly x: number | ((xScale: ScaleContinuousNumeric<number, number>, xAccessor: any, datum: any, plotData: any[]) => number);
    readonly xAccessor?: (datum: any) => any;
    readonly xScale?: ScaleContinuousNumeric<number, number>;
    readonly y: number | ((yScale: ScaleContinuousNumeric<number, number>, datum: any, plotData: any[]) => number);
    readonly yScale?: ScaleContinuousNumeric<number, number>;
}
export declare class Label extends React.Component<LabelProps> {
    static defaultProps: {
        fontFamily: string;
        fontSize: number;
        fontWeight: string;
        fillStyle: string;
        rotate: number;
        x: ({ xScale, xAccessor, datum }: any) => any;
        selectCanvas: (canvases: any) => any;
    };
    static contextType: React.Context<import("@react-financial-charts/core/lib/ChartCanvas").ChartCanvasContextType<number | Date>>;
    render(): JSX.Element;
    private readonly drawOnCanvas;
    private readonly helper;
}
